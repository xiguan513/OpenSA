# Generated by Django 2.1.5 on 2019-10-08 07:59

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('asset', '0002_auto_20191008_1559'),
    ]

    operations = [
        migrations.CreateModel(
            name='GitInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('git_name', models.CharField(max_length=50, verbose_name='服务名称')),
                ('git_http', models.CharField(max_length=100, verbose_name='Http地址')),
                ('git_ssh', models.CharField(max_length=100, verbose_name='ssh地址')),
                ('git_sort', models.SmallIntegerField(blank=True, null=True, verbose_name='排序')),
                ('git_env', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='asset.ServerUse', verbose_name='项目环境')),
            ],
            options={
                'verbose_name': 'Git信息',
                'verbose_name_plural': 'Git信息',
                'db_table': 'gitinfo',
                'ordering': ['git_sort'],
            },
        ),
        migrations.CreateModel(
            name='TemplatePod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='模板名称')),
                ('configmap', models.CharField(max_length=20, verbose_name='环境变量')),
                ('harbor', models.CharField(max_length=20, verbose_name='镜像仓库')),
                ('common', models.CharField(max_length=200, verbose_name='运行命令')),
                ('args', models.CharField(max_length=20, verbose_name='命令参数')),
                ('path', models.CharField(default='/', max_length=100, verbose_name='验证地址')),
                ('port', models.BigIntegerField(verbose_name='容器端口')),
                ('replicas', models.SmallIntegerField(verbose_name='副本数')),
                ('requestsMem', models.CharField(max_length=10, verbose_name='需求内存')),
                ('requestsCpu', models.CharField(max_length=10, verbose_name='需求CPU')),
                ('limitsMem', models.CharField(max_length=10, verbose_name='限制内存')),
                ('rlimitsCpu', models.CharField(max_length=10, verbose_name='限制CPU')),
                ('initialDelaySeconds', models.CharField(max_length=10, verbose_name='初始化时间')),
                ('periodSeconds', models.CharField(max_length=10, verbose_name='重试次数')),
                ('timeoutSeconds', models.CharField(max_length=10, verbose_name='超时时间')),
            ],
            options={
                'verbose_name': '基础模板',
                'verbose_name_plural': '基础模板',
                'db_table': 'template',
            },
        ),
        migrations.CreateModel(
            name='UpdateInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='镜像名字')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('pro_env', models.CharField(default='default', max_length=10, verbose_name='运行环境')),
                ('image_env', models.CharField(max_length=10, verbose_name='项目环境')),
                ('update_tag', models.CharField(max_length=10, null=True, verbose_name='标签')),
                ('server_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kube.GitInfo', verbose_name='服务名称')),
            ],
            options={
                'verbose_name': '服务更新记录',
                'verbose_name_plural': '服务更新记录',
                'db_table': 'updateinfo',
                'ordering': ['create_time'],
            },
        ),
        migrations.AddField(
            model_name='gitinfo',
            name='git_tag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kube.TemplatePod', verbose_name='模板名称'),
        ),
        migrations.AlterUniqueTogether(
            name='gitinfo',
            unique_together={('git_name', 'git_ssh', 'git_http')},
        ),
    ]
