# Generated by Django 2.1.5 on 2019-04-20 15:19

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True, verbose_name='Area Name')),
                ('mini_name', models.CharField(max_length=32, unique=True, verbose_name='Area Short Name')),
            ],
            options={
                'verbose_name': 'Area',
                'verbose_name_plural': 'Area',
                'db_table': 'area',
            },
        ),
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('hostname', models.CharField(max_length=64, null=True, verbose_name='HostName')),
                ('ip', models.GenericIPAddressField(unique=True, verbose_name='IP')),
                ('other_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='Other_IP')),
                ('port', models.IntegerField(default=22, verbose_name='Port')),
                ('user', models.CharField(default='root', max_length=64, verbose_name='Asset User')),
                ('password', models.CharField(max_length=100, null=True, verbose_name='Asset PassWord')),
                ('asset_type', models.IntegerField(blank=True, choices=[(1, 'Physical Machine'), (2, 'Virtual Machine'), (3, 'Switch Board'), (4, 'Router'), (5, 'Firewall'), (6, 'Docker'), (7, 'Other')], null=True, verbose_name='Asset Type')),
                ('os_type', models.IntegerField(blank=True, choices=[(0, 'Centos'), (1, 'Windows'), (2, 'Ubuntu'), (3, 'Debian')], null=True, verbose_name='System Type')),
                ('system_version', models.CharField(blank=True, max_length=32, null=True, verbose_name='System Version')),
                ('mac', models.CharField(blank=True, max_length=128, null=True, verbose_name='MAC')),
                ('cpu_type', models.CharField(blank=True, max_length=128, null=True, verbose_name='CPU Type')),
                ('cpu_core', models.IntegerField(blank=True, null=True, verbose_name='CPU Core Count')),
                ('cpu_total', models.IntegerField(blank=True, null=True, verbose_name='Number of CPUs')),
                ('sn', models.CharField(blank=True, max_length=128, null=True, verbose_name='Asset SN Number')),
                ('memory', models.CharField(blank=True, max_length=128, null=True, verbose_name='Asset Memory')),
                ('disk_info', models.CharField(blank=True, max_length=512, null=True, verbose_name='Disk Information')),
                ('disk_mount', models.CharField(blank=True, max_length=512, null=True, verbose_name='Mount Partition')),
                ('server_type', models.CharField(blank=True, max_length=64, null=True, verbose_name='Server Model')),
                ('os_kernel', models.CharField(blank=True, max_length=255, null=True, verbose_name='System Kernel Version')),
                ('system_arch', models.CharField(blank=True, max_length=32, null=True, verbose_name='System Platform')),
                ('status', models.IntegerField(blank=True, choices=[(1, 'Used'), (2, 'Unused'), (3, 'Scraped'), (4, 'SoldOut')], default=1, null=True, verbose_name='Equipment Status')),
                ('create_date', models.DateTimeField(auto_now_add=True, verbose_name='Create By')),
                ('update_date', models.DateTimeField(auto_now=True, verbose_name='Update By')),
            ],
            options={
                'verbose_name': 'Asset Information List',
                'verbose_name_plural': 'Asset Information List',
                'db_table': 'asset',
            },
        ),
        migrations.CreateModel(
            name='Idc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='Idc Name')),
                ('address', models.CharField(blank=True, max_length=100, null=True, verbose_name='Idc Address')),
                ('net_line', models.CharField(blank=True, default=None, max_length=32, null=True, verbose_name='Line')),
                ('bandwidth', models.CharField(blank=True, default=None, max_length=32, null=True, verbose_name='Bandwidth')),
                ('linkman', models.CharField(blank=True, default=None, max_length=16, null=True, verbose_name='Customer Manager')),
                ('phone', models.CharField(blank=True, default=None, max_length=32, null=True, verbose_name='Contact number')),
                ('cabinet_info', models.CharField(blank=True, default=None, max_length=30, null=True, verbose_name='Cabinet information')),
                ('ip_range', models.CharField(blank=True, default=None, max_length=30, null=True, verbose_name='IP Range')),
                ('comment', models.CharField(blank=True, default=None, max_length=128, null=True, verbose_name='User Comment')),
                ('area', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='area_idc', to='asset.Area', verbose_name='Regional Management')),
            ],
            options={
                'verbose_name': 'Idc Manage',
                'verbose_name_plural': 'Idc Manage',
                'db_table': 'idc',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='Product Name')),
                ('mini_name', models.CharField(max_length=32, unique=True, verbose_name='Product Short Name')),
            ],
            options={
                'verbose_name': 'Product Manage',
                'verbose_name_plural': 'Product Manage',
                'db_table': 'product',
            },
        ),
        migrations.CreateModel(
            name='ServerUse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True, verbose_name='Server Use Name')),
                ('mini_name', models.CharField(max_length=32, unique=True, verbose_name='Server Use Short Name')),
            ],
            options={
                'verbose_name': 'Server Use',
                'verbose_name_plural': 'Server Use',
                'db_table': 'serveruse',
            },
        ),
        migrations.CreateModel(
            name='Work_Env',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True, verbose_name='Work_Env Name')),
                ('mini_name', models.CharField(max_length=32, unique=True, verbose_name='Work_Env Short Name')),
            ],
            options={
                'verbose_name': 'Work_Env',
                'verbose_name_plural': 'Work_Env',
                'db_table': 'work_env',
            },
        ),
        migrations.AddField(
            model_name='asset',
            name='idc',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='asset.Idc', verbose_name='IDC'),
        ),
        migrations.AddField(
            model_name='asset',
            name='product',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_asset', to='asset.Product', verbose_name='Product'),
        ),
        migrations.AddField(
            model_name='asset',
            name='project',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='project_asset', to='users.Project', verbose_name='User Project'),
        ),
        migrations.AddField(
            model_name='asset',
            name='use',
            field=models.ManyToManyField(blank=True, related_name='serveruse_asset', to='asset.ServerUse', verbose_name='Server Use'),
        ),
        migrations.AddField(
            model_name='asset',
            name='work_env',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='work_asset', to='asset.Work_Env', verbose_name='Working Environment'),
        ),
    ]
